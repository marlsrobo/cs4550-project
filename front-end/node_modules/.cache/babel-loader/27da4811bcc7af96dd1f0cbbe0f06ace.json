{"ast":null,"code":"var _jsxFileName = \"/Users/marleyrobinson/Desktop/NU/2022/spring/cs4550/cs4550-project/front-end/src/components/SearchScreen/ArtistDetailsScreen.js\",\n    _s = $RefreshSig$();\n\nimport { fetchArtistByIdFromSpotify, fetchAllArtistAlbumsByIdFromSpotify } from \"../Services/spotify-api-services\";\nimport { Link, useParams } from \"react-router-dom\";\nimport React, { useEffect, useState } from \"react\";\nimport NavigationSidebar from \"../NavigationSidebar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArtistDetailsScreen = () => {\n  _s();\n\n  const {\n    artistId\n  } = useParams();\n  const [artistDetails, setArtistDetails] = useState({});\n  const [artistAlbums, setArtistAlbums] = useState({});\n\n  const getArtistDetails = async () => {\n    let details = await fetchArtistByIdFromSpotify(artistId);\n    console.log(details.data);\n    return details.data;\n  };\n\n  const getArtistAlbums = async () => {\n    let albums = await fetchAllArtistAlbumsByIdFromSpotify(artistId);\n    console.log(albums.data);\n    return albums.data;\n  };\n\n  const getImage = (artist, height) => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"artistImg\",\n        src: artist.images[0].url,\n        className: \"me-3\",\n        height: height,\n        width: height,\n        style: {\n          \"objectFit\": \"cover\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 20\n      }, this);\n    } catch (Exception) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"artistImg\",\n        src: \"/images/blankProfile.png\",\n        className: \" me-3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  const formatAlbumLinkToSpotify = artist => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"a\", {\n        href: artist.external_urls.spotify,\n        target: \"_blank\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"/images/Spotify_icon.png\",\n          className: \"float-end ps-5\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this);\n    } catch (Exception) {}\n  };\n\n  const getFollowers = artist => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [artist.followers.total.toLocaleString(\"en-US\"), \" listeners\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this);\n    } catch (Exception) {}\n  };\n\n  const formatAlbum = album => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col pb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: album.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        children: [album.release_date.slice(0, 4), \" \\u2219 \", album.album_type, \" \\u2219 \", album.total_tracks, \" songs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: `/album/details/${album.id}`,\n        children: getImage(album, \"200px\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this);\n  };\n\n  const formatAlbums = albums => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: albums.items.map(album => formatAlbum(album))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } catch (Exception) {}\n  };\n\n  useEffect(() => {\n    getArtistDetails().then(artist => setArtistDetails(artist));\n    getArtistAlbums().then(albums => setArtistAlbums(albums));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"row mt-2 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Artist Details Screen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-2 col-lg-1 col-xl-2\",\n      children: /*#__PURE__*/_jsxDEV(NavigationSidebar, {\n        active: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"col-10 col-lg-11 col-xl-10 mt-3 row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-6 col-xxl-5\",\n        children: [getImage(artistDetails, \"400px\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 me-3 btn btn-success\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-thumbs-up me-1 wd-14px-font wd-gray-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 btn btn-danger\",\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"far fa-thumbs-down me-1 wd-14px-font wd-gray-color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"mt-3 form-control me-2\",\n          placeholder: \"Leave a review\",\n          style: {\n            \"width\": \"400px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 mb-4 btn btn-secondary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Reviews\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-12 col-lg-6 col-xxl-7\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [formatAlbumLinkToSpotify(artistDetails), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: artistDetails.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), getFollowers(artistDetails)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-5\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mt-5 mb-3\",\n            children: \"Discography\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), formatAlbums(artistAlbums)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ArtistDetailsScreen, \"WeP++aYpbIX6ucZkebNN8qYcZ5o=\", false, function () {\n  return [useParams];\n});\n\n_c = ArtistDetailsScreen;\nexport default ArtistDetailsScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistDetailsScreen\");","map":{"version":3,"sources":["/Users/marleyrobinson/Desktop/NU/2022/spring/cs4550/cs4550-project/front-end/src/components/SearchScreen/ArtistDetailsScreen.js"],"names":["fetchArtistByIdFromSpotify","fetchAllArtistAlbumsByIdFromSpotify","Link","useParams","React","useEffect","useState","NavigationSidebar","ArtistDetailsScreen","artistId","artistDetails","setArtistDetails","artistAlbums","setArtistAlbums","getArtistDetails","details","console","log","data","getArtistAlbums","albums","getImage","artist","height","images","url","Exception","formatAlbumLinkToSpotify","external_urls","spotify","getFollowers","followers","total","toLocaleString","formatAlbum","album","name","release_date","slice","album_type","total_tracks","id","formatAlbums","items","map","then"],"mappings":"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","sourcesContent":["import {fetchArtistByIdFromSpotify, fetchAllArtistAlbumsByIdFromSpotify} from \"../Services/spotify-api-services\";\nimport {Link, useParams} from \"react-router-dom\";\nimport React, {useEffect, useState} from \"react\";\nimport NavigationSidebar from \"../NavigationSidebar\";\n\n\nconst ArtistDetailsScreen = () => {\n\n    const {artistId} = useParams();\n    const [artistDetails, setArtistDetails] = useState({});\n    const [artistAlbums, setArtistAlbums] = useState({});\n    const getArtistDetails = async () => {\n        let details = await fetchArtistByIdFromSpotify(artistId);\n        console.log(details.data);\n        return details.data;\n    };\n\n    const getArtistAlbums = async () => {\n        let albums = await fetchAllArtistAlbumsByIdFromSpotify(artistId);\n        console.log(albums.data);\n        return albums.data;\n    }\n\n    const getImage = (artist, height) => {\n        try {\n            return <img id=\"artistImg\" src={artist.images[0].url} className=\"me-3\" height={height} width={height}\n                        style={{\"objectFit\": \"cover\"}}/>\n        } catch (Exception) {\n            return <img id=\"artistImg\" src=\"/images/blankProfile.png\" className=\" me-3\"/>\n        }\n    };\n\n\n    const formatAlbumLinkToSpotify = (artist) => {\n        try {\n            return (\n                <a href={artist.external_urls.spotify} target=\"_blank\">\n                    <img src=\"/images/Spotify_icon.png\" className=\"float-end ps-5\" height=\"100px\"/></a>\n            );\n        } catch (Exception) {\n        }\n    };\n\n    const getFollowers = (artist) => {\n        try {\n            return <h5>{artist.followers.total.toLocaleString(\"en-US\")} listeners</h5>;\n        } catch (Exception) {\n        }\n    };\n\n    const formatAlbum = (album) => {\n        return (\n            <div className=\"col pb-4\">\n                <h5>{album.name}</h5>\n                <h6>{album.release_date.slice(0, 4)} ∙ {album.album_type} ∙ {album.total_tracks} songs</h6>\n                <Link to={`/album/details/${album.id}`}>{getImage(album, \"200px\")}</Link>\n\n            </div>\n        );\n    };\n\n    const formatAlbums = (albums) => {\n        try {\n            return (\n                <div className=\"row\">\n                    {\n                        albums.items.map(album => formatAlbum(album))\n                    }\n                </div>\n            );\n        } catch (Exception) {\n\n        }\n    };\n\n    useEffect(() => {\n        getArtistDetails().then(artist => setArtistDetails(artist));\n        getArtistAlbums().then(albums => setArtistAlbums(albums));\n    }, []);\n    return (\n        <div className=\"row mt-2 mb-4\">\n            <h1>Artist Details Screen</h1>\n            <div className=\"col-2 col-lg-1 col-xl-2\">\n                <NavigationSidebar active=\"search\"/>\n            </div>\n            <div className=\"col-10 col-lg-11 col-xl-10 mt-3 row\">\n                <div className=\"col-12 col-lg-6 col-xxl-5\">\n                    {getImage(artistDetails, \"400px\")}\n                    <br/>\n                    <button className=\"mt-3 me-3 btn btn-success\">\n                        <i className=\"far fa-thumbs-up me-1 wd-14px-font wd-gray-color\"/>\n                    </button>\n                    <button className=\"mt-3 btn btn-danger\">\n                        <i className=\"far fa-thumbs-down me-1 wd-14px-font wd-gray-color\"/>\n                    </button>\n                    <br/>\n                    <textarea className=\"mt-3 form-control me-2\" placeholder=\"Leave a review\"\n                              style={{\"width\": \"400px\"}}/>\n                    <button className=\"mt-3 mb-4 btn btn-secondary\">Submit</button>\n                    <h4>Reviews</h4>\n                </div>\n                <div className=\"col-12 col-lg-6 col-xxl-7\">\n                    <div >\n                        {formatAlbumLinkToSpotify(artistDetails)}\n                        <h1>{artistDetails.name}</h1>\n                        {getFollowers(artistDetails)}\n                    </div>\n\n                    <div className=\"mt-5\">\n                        <h3 className=\"mt-5 mb-3\">Discography</h3>\n                        {formatAlbums(artistAlbums)}\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    );\n};\nexport default ArtistDetailsScreen;"]},"metadata":{},"sourceType":"module"}