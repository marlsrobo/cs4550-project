{"ast":null,"code":"import axios from \"axios\";\nimport qs from \"qs\";\nglobal.Buffer = global.Buffer || require('buffer').Buffer;\nconst client_id = 'bdf7e69e81d74af595db40041ea8f146'; // Your client id\n\nconst client_secret = '631a50bd9a064799b670a8fbba47e625'; // Your secret\n\nconst auth_token = Buffer.from(`${client_id}:${client_secret}`, 'utf-8').toString('base64');\n\nconst getAuth = async () => {\n  try {\n    //make post request to SPOTIFY API for access token, sending relavent info\n    const token_url = 'https://accounts.spotify.com/api/token';\n    const data = qs.stringify({\n      'grant_type': 'client_credentials'\n    });\n    const response = await axios.post(token_url, data, {\n      headers: {\n        'Authorization': `Basic ${auth_token}`,\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    }); //return access token\n\n    return response.data.access_token;\n  } catch (error) {\n    //on fail, log the error in console\n    console.log(error);\n  }\n};\n\nexport const performSearch = async (query, qType) => {\n  //request token using getAuth() function\n  const access_token = await getAuth();\n  const api_url = `https://api.spotify.com/v1/search?type=${qType}&q=${query}`;\n  console.log(api_url);\n\n  try {\n    const response = await axios.get(api_url, {\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n\n    switch (qType) {\n      case \"album\":\n        console.log(response.data.albums.items);\n        return response.data.albums.items;\n\n      case \"artist\":\n        return response.data.artists.items;\n\n      default:\n        console.log(\"not an album or artist\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAlbumByIdFromSpotify = async albumId => {\n  const access_token = await getAuth();\n  const api_url = `https://api.spotify.com/v1/albums/${albumId}`;\n  console.log(api_url);\n\n  try {\n    const response = await axios.get(api_url, {\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchArtistByIdFromSpotify = async artistId => {\n  const access_token = await getAuth();\n  const api_url = `https://api.spotify.com/v1/artists/${artistId}`;\n  console.log(api_url);\n\n  try {\n    const response = await axios.get(api_url, {\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchAllArtistAlbumsByIdFromSpotify = async artistId => {\n  const access_token = await getAuth();\n  const api_url = `https://api.spotify.com/v1/artists/${artistId}/albums?market=US&limit=50`;\n  console.log(api_url);\n\n  try {\n    const response = await axios.get(api_url, {\n      headers: {\n        'Authorization': `Bearer ${access_token}`\n      }\n    });\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/marleyrobinson/Desktop/NU/2022/spring/cs4550/cs4550-project/front-end/src/components/Services/spotify-api-services.js"],"names":["axios","qs","global","Buffer","require","client_id","client_secret","auth_token","from","toString","getAuth","token_url","data","stringify","response","post","headers","access_token","error","console","log","performSearch","query","qType","api_url","get","albums","items","artists","fetchAlbumByIdFromSpotify","albumId","fetchArtistByIdFromSpotify","artistId","fetchAllArtistAlbumsByIdFromSpotify"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport qs from \"qs\";\nglobal.Buffer = global.Buffer || require('buffer').Buffer;\n\nconst client_id = 'bdf7e69e81d74af595db40041ea8f146'; // Your client id\nconst client_secret = '631a50bd9a064799b670a8fbba47e625'; // Your secret\nconst auth_token = Buffer.from(`${client_id}:${client_secret}`, 'utf-8').toString('base64');\n\nconst getAuth = async () => {\n    try{\n        //make post request to SPOTIFY API for access token, sending relavent info\n        const token_url = 'https://accounts.spotify.com/api/token';\n        const data = qs.stringify({'grant_type':'client_credentials'});\n\n        const response = await axios.post(token_url, data, {\n            headers: {\n                'Authorization': `Basic ${auth_token}`,\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        })\n        //return access token\n        return response.data.access_token;\n    }catch(error){\n        //on fail, log the error in console\n        console.log(error);\n    }\n};\n\nexport const performSearch = async (query, qType) => {\n    //request token using getAuth() function\n    const access_token = await getAuth();\n\n    const api_url = `https://api.spotify.com/v1/search?type=${qType}&q=${query}`;\n    console.log(api_url);\n    try{\n        const response = await axios.get(api_url, {\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        switch (qType) {\n            case \"album\":\n                console.log(response.data.albums.items);\n                return response.data.albums.items;\n            case \"artist\":\n                return response.data.artists.items;\n            default:\n                console.log(\"not an album or artist\");\n\n        }\n    }catch(error){\n        console.log(error);\n    }\n};\n\nexport const fetchAlbumByIdFromSpotify = async (albumId) => {\n    const access_token = await getAuth();\n\n    const api_url = `https://api.spotify.com/v1/albums/${albumId}`;\n    console.log(api_url);\n    try{\n        const response = await axios.get(api_url, {\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        return response;\n    }catch(error){\n        console.log(error);\n    }\n};\n\nexport const fetchArtistByIdFromSpotify = async (artistId) => {\n    const access_token = await getAuth();\n\n    const api_url = `https://api.spotify.com/v1/artists/${artistId}`;\n    console.log(api_url);\n    try{\n        const response = await axios.get(api_url, {\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        return response;\n    }catch(error){\n        console.log(error);\n    }\n};\n\nexport const fetchAllArtistAlbumsByIdFromSpotify = async (artistId) => {\n    const access_token = await getAuth();\n\n    const api_url = `https://api.spotify.com/v1/artists/${artistId}/albums?market=US&limit=50`;\n    console.log(api_url);\n    try{\n        const response = await axios.get(api_url, {\n            headers: {\n                'Authorization': `Bearer ${access_token}`\n            }\n        });\n        return response;\n    }catch(error){\n        console.log(error);\n    }\n};"]},"metadata":{},"sourceType":"module"}