{"ast":null,"code":"var _jsxFileName = \"/Users/marleyrobinson/Desktop/NU/2022/spring/cs4550/cs4550-project/front-end/src/components/SearchScreen/ArtistSearchSummary.js\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ArtistSearchSummary = _ref => {\n  let {\n    artist\n  } = _ref;\n  const imageStyle = {\n    width: \"150px\",\n    height: \"150px\",\n    objectFit: \"cover\",\n    borderRadius: \"20px\"\n  };\n\n  const formatGenres = genres => {\n    let result = \"\";\n\n    for (let i = 0; i < genres.length; i++) {\n      result += genres[i] + \", \";\n    }\n\n    if (genres.length !== 0) {\n      result = result.slice(0, -2);\n    }\n\n    return result;\n  };\n\n  const getImage = artist => {\n    try {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"artistImg\",\n        src: artist.images[0].url,\n        className: \"float-start me-3\",\n        style: imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    } catch (Exception) {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"artistImg\",\n        src: \"images/blankProfile.png\",\n        className: \"float-start me-3\",\n        style: imageStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 20\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item pt-3 pb-3\",\n    children: [getImage(artist), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-start\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: artist.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), \"Popularity: \", artist.popularity, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), \"Followers: \", artist.followers.total.toLocaleString(\"en-US\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), \"Genres: \", formatGenres(artist.genres), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: artist.external_urls.spotify,\n        target: \"_blank\",\n        children: \"Listen on Spotify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"float-end\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/artist/details/${artist.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary\",\n          children: \"Click for more details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ArtistSearchSummary;\nexport default ArtistSearchSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArtistSearchSummary\");","map":{"version":3,"sources":["/Users/marleyrobinson/Desktop/NU/2022/spring/cs4550/cs4550-project/front-end/src/components/SearchScreen/ArtistSearchSummary.js"],"names":["Link","ArtistSearchSummary","artist","imageStyle","width","height","objectFit","borderRadius","formatGenres","genres","result","i","length","slice","getImage","images","url","Exception","name","popularity","followers","total","toLocaleString","external_urls","spotify","id"],"mappings":";AAAA,SAAQA,IAAR,QAAmB,kBAAnB;;;AAEA,MAAMC,mBAAmB,GAAG,QAAc;AAAA,MAAb;AAACC,IAAAA;AAAD,GAAa;AAEtC,QAAMC,UAAU,GAAG;AACfC,IAAAA,KAAK,EAAE,OADQ;AAEfC,IAAAA,MAAM,EAAE,OAFO;AAGfC,IAAAA,SAAS,EAAE,OAHI;AAIfC,IAAAA,YAAY,EAAE;AAJC,GAAnB;;AAOA,QAAMC,YAAY,GAAIC,MAAD,IAAY;AAC7B,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,MAAM,CAACG,MAA3B,EAAmCD,CAAC,EAApC,EAAwC;AACpCD,MAAAA,MAAM,IAAID,MAAM,CAACE,CAAD,CAAN,GAAY,IAAtB;AACH;;AACD,QAAIF,MAAM,CAACG,MAAP,KAAkB,CAAtB,EAAyB;AACrBF,MAAAA,MAAM,GAAGA,MAAM,CAACG,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAjB,CAAT;AACH;;AACD,WAAOH,MAAP;AACH,GATD;;AAWA,QAAMI,QAAQ,GAAIZ,MAAD,IAAY;AACzB,QAAI;AACA,0BAAO;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,GAAG,EAAEA,MAAM,CAACa,MAAP,CAAc,CAAd,EAAiBC,GAA1C;AAA+C,QAAA,SAAS,EAAC,kBAAzD;AACK,QAAA,KAAK,EAAEb;AADZ;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAHD,CAIA,OAAOc,SAAP,EAAkB;AACd,0BAAO;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,GAAG,EAAC,yBAAxB;AAAkD,QAAA,SAAS,EAAC,kBAA5D;AACK,QAAA,KAAK,EAAEd;AADZ;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH;AACJ,GATD;;AAWA,sBACI;AAAI,IAAA,SAAS,EAAC,2BAAd;AAAA,eACKW,QAAQ,CAACZ,MAAD,CADb,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA,kBAAKA,MAAM,CAACgB;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,kBAEiBhB,MAAM,CAACiB,UAFxB,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,iBAIgBjB,MAAM,CAACkB,SAAP,CAAiBC,KAAjB,CAAuBC,cAAvB,CAAsC,OAAtC,CAJhB,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ,cAMad,YAAY,CAACN,MAAM,CAACO,MAAR,CANzB,eAOI;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAG,QAAA,IAAI,EAAEP,MAAM,CAACqB,aAAP,CAAqBC,OAA9B;AAAuC,QAAA,MAAM,EAAC,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAYI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,mBAAkBtB,MAAM,CAACuB,EAAG,EAAvC;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsBH,CArDD;;KAAMxB,mB;AAuDN,eAAeA,mBAAf","sourcesContent":["import {Link} from \"react-router-dom\";\n\nconst ArtistSearchSummary = ({artist}) => {\n\n    const imageStyle = {\n        width: \"150px\",\n        height: \"150px\",\n        objectFit: \"cover\",\n        borderRadius: \"20px\"\n    }\n\n    const formatGenres = (genres) => {\n        let result = \"\";\n        for (let i = 0; i < genres.length; i++) {\n            result += genres[i] + \", \"\n        }\n        if (genres.length !== 0) {\n            result = result.slice(0, -2);\n        }\n        return result;\n    }\n\n    const getImage = (artist) => {\n        try {\n            return <img id=\"artistImg\" src={artist.images[0].url} className=\"float-start me-3\"\n                        style={imageStyle}/>\n        }\n        catch (Exception) {\n            return <img id=\"artistImg\" src=\"images/blankProfile.png\" className=\"float-start me-3\"\n                        style={imageStyle}/>\n        }\n    }\n\n    return(\n        <li className=\"list-group-item pt-3 pb-3\">\n            {getImage(artist)}\n            <div className=\"float-start\">\n                <h5>{artist.name}</h5>\n                Popularity: {artist.popularity}\n                <br/>\n                Followers: {artist.followers.total.toLocaleString(\"en-US\")}\n                <br/>\n                Genres: {formatGenres(artist.genres)}\n                <br/>\n                <a href={artist.external_urls.spotify} target=\"_blank\">Listen on Spotify</a>\n            </div>\n            <div className=\"float-end\">\n                <Link to={`/artist/details/${artist.id}`}>\n                    <button className=\"btn btn-secondary\">Click for more details</button>\n                </Link>\n            </div>\n\n        </li>\n    );\n\n};\n\nexport default ArtistSearchSummary;"]},"metadata":{},"sourceType":"module"}